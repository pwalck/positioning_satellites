#!/usr/bin/perl

use JSON;
use XML::FeedPP;
use POSIX 'strftime';
use Date::Parse;

use Encode "decode_utf8";
use utf8;
use open qw/:std :utf8/;

$feed = XML::FeedPP::RSS->new();

$feed->xmlns('xmlns:atom'   => 'http://www.w3.org/2005/Atom');
$feed->xmlns('xmlns:cc'     => 'http://web.resource.org/cc/');

$feed->title('Status of positioning satellites');
$feed->link('https://github.com/pwalck/positioning_satellites');
$feed->description('This feed is generated by scripts scraping wikipedia for updated '.
                   'information on positioning satellites from several different systems. '.
                   'It shows when satellites are launched, become operational and are retired.');

$feed->pubDate(strftime('%a, %d %b %Y %H:%M:%S %z', localtime time));

$time_fmt = '%a, %d %b %Y %H:%M:%S %z';

for (glob "*/*.json")
{
  ($system, $safe_name) = /^(.*?)\/(.*?)\./;
  $data = from_json((do { open my $f, $_; <$f> })[0]);

  next if $system eq "galileo" and $data->{Status} =~ /^\s*$/;
  
  $name = $data->{Satellite};

  $launched = $data->{"Launch (UTC)"} || $data->{"Launch date (UTC)"};

  if ($retired = str2time($data->{Retired}))
  {
    $item = $feed->add_item(
      title => "$name was retired",
      description => "$system satellite $name was retired. It launched ". $launched .".",
      pubDate => strftime($time_fmt, localtime $retired)
    );
  }
  
  $item = $feed->add_item(
    title => "$name launched",
    description => "$system satellite $name was launched from ". $data->{"Launch site"} .".",
    pubDate => strftime($time_fmt, localtime str2time($launched))
  );
}

$feed->sort_item();
$xml = $feed->to_string(indent => 2);

print $xml;
